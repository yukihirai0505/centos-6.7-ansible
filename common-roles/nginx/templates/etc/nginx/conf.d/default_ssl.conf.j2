# For HTTP
server {
    listen 80;
    server_name yukihirai0505.com www.yukihirai0505.com;
    access_log   /var/log/nginx/www.yukihirai0505.com/access.log main;
    error_log    /var/log/nginx/www.yukihirai0505.com/error.log  warn;

    # document root
    root   /var/www/html;

    # index file タイプの優先順を設定します。
    index   index.php index.html index.htm;

    access_log   /var/log/nginx/www.yukihirai0505.com/access.log main;
    error_log    /var/log/nginx/www.yukihirai0505.com/error.log  warn;

    # pecotterのwantedlyにのっているのでリダイレクトしてあげよっと
    location ^~ /diary-182 {
      rewrite ^(.*)$ http://yukihirai.hatenablog.com/entry/pecotter redirect;
    }

    # robots.txt へのアクセスはログへの記録オフ
    location = /robots.txt  {
        access_log off;
        log_not_found off;
    }
    # favicon へのアクセスはログへの記録オフ
    location = /favicon.ico {
        empty_gif;
        access_log off;
        log_not_found off;
    }

    location ^~ /instagram/ {
        proxy_pass http://instagram;
    }

    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ~ \.php$ {
       # 存在しないPHPファイルをシャットアウト
        if (!-f $request_filename) {
            return 404;
            break;
        }
        fastcgi_pass   phpfpm;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
    # よくアクセスされる静的ファイルにブラウザキャッシュが効くように設定
    location ~ \.(jpg|png|gif|swf|jpeg)$ {
        log_not_found off; # 404の時にerror_logに書き込まないようにする設定
        access_log off;
        expires 1M;
        add_header Cache-Control "public";
    }

    # cssとjavascriptは長めに
    location ~* \.(?:css|js)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    location ~ \.ico$ {
        log_not_found off;
        access_log off;
        expires max;
    }

    # ドット始まりのファイルはアクセスできないように
    location ~ /\. {
        deny all;
        log_not_found off;
        access_log off;
    }
}
